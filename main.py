import os
from vkbottle.bot import Bot, Message
from vkbottle import (
        GroupEventType,
        GroupTypes,
        Keyboard,
        KeyboardButtonColor,
        Text,
        VKAPIError,
        template_gen,
        TemplateElement
    )
from dotenv import load_dotenv

load_dotenv()

bot = Bot(token=os.getenv("GROUP_TOKEN"))


@bot.on.private_message(text="test keyboard")
async def handler(message: Message):
    keyboard = Keyboard()
    keyboard.add(Text("–î–∏–≤–∞–Ω –¥–≤—É—Ö –º–µ—Å—Ç–Ω—ã–π"), color=KeyboardButtonColor.PRIMARY)
    keyboard.add(Text("–î–∏–≤–∞–Ω —Ç—Ä–µ—Ö–º–µ—Å—Ç–Ω—ã–π"), color=KeyboardButtonColor.PRIMARY)
    keyboard.row()
    keyboard.add(Text("–£–≥–ª–æ–≤–æ–π –¥–∏–≤–∞–Ω"), color=KeyboardButtonColor.PRIMARY)
    keyboard.add(Text("–ö—Ä–µ—Å–ª–æ"), color=KeyboardButtonColor.PRIMARY)

    await message.answer("Keyboard", keyboard=keyboard)


@bot.on.private_message(text="test keyboard 2")
async def second_test_keyboard(message: Message):
    keyboard = (
            Keyboard(inline=True)
            .add(Text("–î–∏–≤–∞–Ω –¥–≤—É—Ö –º–µ—Å—Ç–Ω—ã–π"), color=KeyboardButtonColor.PRIMARY)
            .add(Text("–î–∏–≤–∞–Ω —Ç—Ä–µ—Ö–º–µ—Å—Ç–Ω—ã–π"), color=KeyboardButtonColor.PRIMARY)
            .row()
            .add(Text("–£–≥–ª–æ–≤–æ–π –¥–∏–≤–∞–Ω"), color=KeyboardButtonColor.PRIMARY)
            .add(Text("–ö—Ä–µ—Å–ª–æ"), color=KeyboardButtonColor.PRIMARY)
        )

    await message.answer("Keyboard", keyboard=keyboard)


"""Keyboard payload"""


@bot.on.private_message(text="menu")
@bot.on.private_message(payload={"cmd": "menu"})
async def menu_handler(message: Message):
    keyboard = Keyboard(one_time=True).add(Text("Store", {"cmd": "store"}))
    await message.answer("MENU", keyboard=keyboard)


@bot.on.private_message(text="store")
@bot.on.private_message(payload={"cmd": "store"})
async def store_handler(message: Message):
    keyboard = Keyboard(one_time=True).add(Text("Back", {"cmd": "menu"}), color=KeyboardButtonColor.NEGATIVE)
    await message.answer("STORE", keyboard=keyboard)


"""Carousel"""


@bot.on.private_message(text="carousel")
async def carousel_handler(message: Message):
    keyboard = Keyboard().add(Text("Button"), color=KeyboardButtonColor.NEGATIVE)
    carousel = template_gen(
        TemplateElement(
            "Test title",
            "Description",
            "-203980592_457239029",
            keyboard.get_json()
        )
    )
    await message.answer("Carousel", template=carousel)


@bot.on.raw_event(GroupEventType.GROUP_JOIN, dataclass=GroupTypes.GroupJoin)
async def group_join_handler(event: GroupTypes.GroupJoin):
    try:
        await bot.api.messages.send(
            peer_id=event.object.user_id,
            message="–ó–∞–¥–∞–≤–∞–π—Ç–µ! –ú—ã —Ä–∞–¥—ã —á—Ç–æ –≤—ã –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∏–º–µ–Ω–Ω–æ –∫ –Ω–∞–º üòä –° —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –≤—Å–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–∞—Å –≤–æ–ø—Ä–æ—Å—ã. –ü—Ä–∏—Å—ã–ª–∞–π—Ç–µ —Ñ–æ—Ç–æ –º–µ–±–µ–ª–∏ –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏. –ú—ã —Ä–∞—Å—Å—á–∏—Ç–∞–µ–º —Ç–æ—á–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —á–∏—Å—Ç–∫–∏.",
            random_id=0
            )
    except VKAPIError[901]:
        pass


@bot.on.raw_event(GroupEventType.GROUP_LEAVE, dataclass=GroupTypes.GroupLeave)
async def group_leave_handler(event: GroupTypes.GroupLeave):
    try:
        await bot.api.messages.send(
            peer_id=event.object.user_id,
            message="So sorry...",
            random_id=0
            )
    except VKAPIError[901]:
        pass


bot.run_forever()
